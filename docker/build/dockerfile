# strong inspiration by Tim de Pater <code@trafex.nl
ARG ALPINE_VERSION=3.15
FROM alpine:${ALPINE_VERSION}

# Setup document root
WORKDIR /var/www/html

# Install packages and remove default server definition
RUN apk add --no-cache \
  curl \
  nginx \
  php8 \
  php8-ctype \
  php8-curl \
  php8-dom \
  php8-fpm \
  php8-gd \
  php8-intl \
  php8-exif \
  php8-mbstring \
  php8-common \
  php8-mysqlnd \
  php8-pdo \
  php8-pdo_mysql \
  php8-opcache \
  php8-openssl \
  php8-phar \
  php8-session \
  php8-xml \
  php8-xmlreader \
  php8-zlib \
  runit
  #supervisor

# Create runit services
RUN mkdir /etc/sv/php-fpm \
    && mkdir /etc/sv/nginx

# Copy run scripts to service dir
COPY runit/php-fpm/run /etc/sv/php-fpm/
COPY runit/nginx/run /etc/sv/nginx/

# Activate services and make executable
RUN ln -s /etc/sv/php-fpm /etc/service/ \
    && chmod +x /etc/sv/php-fpm/run \
    && ln -s /etc/sv/nginx /etc/service/ \
    && chmod +x /etc/sv/nginx/run

# Create symlink so programs depending on `php` still function
RUN ln -s /usr/bin/php8 /usr/bin/php

# Configure nginx (commented because handled with docker-compose volume)
#COPY config/nginx.conf /etc/nginx/nginx.conf

# Configure PHP-FPM (commented because handled with docker-compose volume)
#COPY config/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
#COPY config/php.ini /etc/php8/conf.d/custom.ini

# Configure supervisord (commented because handled with docker-compose volume)
#COPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/html /run /var/lib/nginx /var/log/nginx

# Switch to use a non-root user from here on
USER nobody

# Add application (commented because handled with docker-compose volume)
#COPY --chown=nobody src/ /var/www/html/

# Expose the port nginx is reachable on
EXPOSE 80

# Let supervisord start nginx & php-fpm
#CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# Let runit start nginx & php-fpm
CMD ["runsvdir", "/etc/service"]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:80/fpm-ping